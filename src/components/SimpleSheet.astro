---
import { getSiteSettings } from "@/lib/settings";

interface Props {
    class?: string;
    [key: string]: unknown;
}

const { class: classNames = "", ...props } = Astro.props;
const settings = await getSiteSettings();
const { sitename } = settings;
---

<div class="sheet" :class="{ 'sheet--drawer-open': open }" x-data="{ open: false }">
    <aside class="sheet__drawer" id="drawer" @click.outside="open = false">
        <div class="sheet__drawer-inner">
            <slot name="aside" />
        </div>
    </aside>

    <div class="sheet__main">
        <header class="sheet__header">
            <button
                @click.stop="open = !open"
                aria-controls="drawer"
                :aria-expanded="open.toString()"
            >
                Menu
            </button>
            <span>{sitename}</span>
        </header>

        <main class="sheet__content">
            <slot />
        </main>

        <footer class="sheet__footer">
            <slot name="footer" />
        </footer>
    </div>
</div>

<style>
    :root {
        --drawer-width: 280px;
        --drawer-transition-duration: 0.3s;
        --drawer-transition-timing: ease-in-out;
    }

    .sheet {
        display: grid;
        /* The first column is for the drawer, starts at 0 width */
        grid-template-columns: 0 1fr;
        grid-template-rows: auto 1fr auto;
        grid-template-areas:
            "drawer main"
            "drawer main"
            "drawer main";
        min-height: 100svh;
        transition: grid-template-columns var(--drawer-transition-duration)
            var(--drawer-transition-timing);
    }

    .sheet__main {
        grid-area: main;
        display: grid;
        grid-template-rows: auto 1fr auto;
        grid-template-areas:
            "header"
            "content"
            "footer";
        height: 100vh;
    }

    /* When the drawer is open, change the first column's width */
    .sheet--drawer-open {
        grid-template-columns: var(--drawer-width) 1fr;
    }

    .sheet__header {
        grid-area: header;
        height: 3rem;
        display: flex;
        align-items: center;
        justify-content: space-between;
        padding: 0 1rem;
        position: sticky;
        top: 0;
        z-index: 10;
        background: white;
        border-bottom: 1px solid #eee;
    }

    .sheet__drawer {
        grid-area: drawer;
        /* Hides the content of the drawer while it's animating */
        overflow: hidden;
        background: white;
        border-right: 1px solid #eee;
    }

    /* Inner container ensures content doesn't get cut off and is scrollable */
    .sheet__drawer-inner {
        width: var(--drawer-width);
        height: 100%;
        overflow-y: auto;
        padding: 1rem;
    }

    .sheet__content {
        grid-area: content;
        overflow-y: auto;
        overflow-x: hidden;
    }

    .sheet__footer {
        grid-area: footer;
        background: white;
        padding: 1rem;
        border-top: 1px solid #eee;
    }
</style>
